name: aws-k8s-cni.yaml
version: 0.0.5
services:
  aws-node-dwdkd:
    annotations: {}
    apiVersion: rbac.authorization.k8s.io/v1
    dependsOn: []
    id: null
    isAnnotation: null
    labels:
      app.kubernetes.io/instance: aws-vpc-cni
      app.kubernetes.io/name: aws-node
      app.kubernetes.io/version: v1.11.5
      k8s-app: aws-node
    model: kubernetes
    name: aws-node
    namespace: ""
    settings:
      rules:
      - api Groups:
        - crd.k8s.amazonaws.com
        resources:
        - eniconfigs
        verbs:
        - list
        - watch
        - get
      - api Groups:
        - ""
        resources:
        - namespaces
        verbs:
        - list
        - watch
        - get
      - api Groups:
        - ""
        resources:
        - pods
        verbs:
        - list
        - watch
        - get
      - api Groups:
        - ""
        resources:
        - nodes
        verbs:
        - list
        - watch
        - get
        - update
      - api Groups:
        - extensions
        resources:
        - '*'
        verbs:
        - list
        - watch
      - api Groups:
        - ""
        - events.k8s.io
        resources:
        - events
        verbs:
        - create
        - patch
        - list
    traits:
      meshmap:
        edges:
        - data:
            id: d05e08bf-bde5-4847-95a8-032b5c80cb22
            metadata:
              binded_by: 3337f1db-7023-459e-bfdb-94f05d35c460
            source: c249b63a-688d-4ae7-bb38-3f22e78faff6
            subType: Permission
            target: bc429a28-a75d-4ebe-8231-e0afd66ef59e
          style:
            control-point-distances: null
            control-point-weights: "0.5"
            curve-style: bezier
            haystack-radius: "0"
            line-color: rgb(153,153,153)
            line-style: dotted
            opacity: "1"
            segment-distances: 20px
            segment-weights: "0.5"
            target-arrow-shape: vee
            taxi-direction: auto
            taxi-turn: 50%
            taxi-turn-min-distance: 10px
            width: 1.5px
        fieldRefData: {}
        id: c249b63a-688d-4ae7-bb38-3f22e78faff6
        meshmodel-metadata:
          capabilities: ""
          defaultData: ""
          genealogy: ""
          isAnnotation: false
          isCustomResource: false
          isModelAnnotation: "FALSE"
          isNamespaced: false
          logoURL: Created by Meshery Authors
          model: kubernetes
          modelDisplayName: Kubernetes
          primaryColor: '#326CE5'
          secondaryColor: '#7aa1f0'
          shape: round-rectangle
          shapePolygonPoints: ""
          status: enabled
          styleOverrides:
            height: 22px
            width: 22px
            x: "8.5"
            "y": "7.5"
            z-index: 5
          styles: '{"height":"22px", "width":"22px", "x":"8.5", "y":"7.5"}'
          subCategory: ""
          svgColor: ui/public/static/img/meshmodels/kubernetes/color/clusterrole-color.svg
          svgComplete: ""
          svgWhite: ui/public/static/img/meshmodels/kubernetes/white/clusterrole-white.svg
        position:
          posX: 0
          posY: 32
        whiteboardData:
          style: {}
    type: ClusterRole
    version: ""
  aws-node-pjwce:
    annotations: {}
    apiVersion: rbac.authorization.k8s.io/v1
    dependsOn: []
    id: null
    isAnnotation: null
    labels:
      app.kubernetes.io/instance: aws-vpc-cni
      app.kubernetes.io/name: aws-node
      app.kubernetes.io/version: v1.11.5
      k8s-app: aws-node
    model: kubernetes
    name: aws-node
    namespace: ""
    settings:
      role Ref:
        api Group: rbac.authorization.k8s.io
        kind: ClusterRole
        name: aws-node
      subjects:
      - kind: ServiceAccount
        name: aws-node
        namespace: kube-system
    traits:
      meshmap:
        edges: []
        fieldRefData: {}
        id: 3337f1db-7023-459e-bfdb-94f05d35c460
        meshmodel-metadata:
          capabilities: ""
          defaultData: ""
          genealogy: ""
          isAnnotation: false
          isCustomResource: false
          isModelAnnotation: "FALSE"
          isNamespaced: false
          logoURL: Created by Meshery Authors
          model: kubernetes
          modelDisplayName: Kubernetes
          primaryColor: '#326CE5'
          secondaryColor: '#7aa1f0'
          shape: round-rectangle
          shapePolygonPoints: ""
          status: enabled
          styleOverrides:
            height: 25px
            width: 25px
            x: "7"
            "y": "7"
            z-index: 4
          styles: '{"height":"25px","width":"25px","x":"7", "y":"7"}'
          subCategory: ""
          svgColor: ui/public/static/img/meshmodels/kubernetes/color/clusterrolebinding-color.svg
          svgComplete: ""
          svgWhite: ui/public/static/img/meshmodels/kubernetes/white/clusterrolebinding-white.svg
        position:
          posX: 28.606310581583557
          posY: 31.49813490207748
        whiteboardData:
          style:
            height: 10.5
            width: 10.5
            z-index: 1000
    type: ClusterRoleBinding
    version: ""
  aws-node-ydzjv:
    annotations: {}
    apiVersion: v1
    dependsOn: []
    id: null
    isAnnotation: null
    labels:
      app.kubernetes.io/instance: aws-vpc-cni
      app.kubernetes.io/name: aws-node
      app.kubernetes.io/version: v1.11.5
      k8s-app: aws-node
    model: kubernetes
    name: aws-node
    namespace: kube-system
    settings: {}
    traits:
      meshmap:
        edges:
        - data:
            id: d05e08bf-bde5-4847-95a8-032b5c80cb22
            metadata:
              binded_by: 3337f1db-7023-459e-bfdb-94f05d35c460
            source: c249b63a-688d-4ae7-bb38-3f22e78faff6
            subType: Permission
            target: bc429a28-a75d-4ebe-8231-e0afd66ef59e
          style:
            control-point-distances: null
            control-point-weights: "0.5"
            curve-style: bezier
            haystack-radius: "0"
            line-color: rgb(153,153,153)
            line-style: dotted
            opacity: "1"
            segment-distances: 20px
            segment-weights: "0.5"
            target-arrow-shape: vee
            taxi-direction: auto
            taxi-turn: 50%
            taxi-turn-min-distance: 10px
            width: 1.5px
        fieldRefData: {}
        id: bc429a28-a75d-4ebe-8231-e0afd66ef59e
        meshmodel-metadata:
          capabilities: ""
          defaultData: ""
          genealogy: ""
          isAnnotation: false
          isCustomResource: false
          isModelAnnotation: "FALSE"
          isNamespaced: true
          logoURL: https://github.com/cncf/artwork/blob/master/projects/kubernetes/icon/white/kubernetes-icon-white.svg
          model: kubernetes
          modelDisplayName: Kubernetes
          primaryColor: '#326CE5'
          secondaryColor: '#7aa1f0'
          shape: bottom-round-rectangle
          shapePolygonPoints: ""
          status: enabled
          styleOverrides: ""
          styles: ""
          subCategory: ""
          svgColor: ui/public/static/img/meshmodels/kubernetes/color/serviceaccount-color.svg
          svgComplete: ""
          svgWhite: ui/public/static/img/meshmodels/kubernetes/white/serviceaccount-white.svg
        position:
          posX: 57
          posY: 31
        whiteboardData:
          style: {}
    type: ServiceAccount
    version: ""
  aws-node-zzjge:
    annotations: {}
    apiVersion: apps/v1
    dependsOn: []
    id: null
    isAnnotation: null
    labels:
      app.kubernetes.io/instance: aws-vpc-cni
      app.kubernetes.io/name: aws-node
      app.kubernetes.io/version: v1.11.5
      k8s-app: aws-node
    model: kubernetes
    name: aws-node
    namespace: kube-system
    settings:
      spec:
        selector:
          match Labels:
            k8s-app: aws-node
        template:
          metadata:
            labels:
              app.kubernetes.io/instance: aws-vpc-cni
              app.kubernetes.io/name: aws-node
              k8s-app: aws-node
          spec:
            affinity:
              node Affinity:
                required During Scheduling Ignored During Execution:
                  node Selector Terms:
                  - match Expressions:
                    - key: kubernetes.io/os
                      operator: In
                      values:
                      - linux
                    - key: kubernetes.io/arch
                      operator: In
                      values:
                      - amd64
                      - arm64
                    - key: eks.amazonaws.com/compute-type
                      operator: NotIn
                      values:
                      - fargate
            containers:
            - env:
              - name: ADDITIONAL_ENI_TAGS
                value: '{}'
              - name: AWS_VPC_CNI_NODE_PORT_SUPPORT
                value: "true"
              - name: AWS_VPC_ENI_MTU
                value: "9001"
              - name: AWS_VPC_K8S_CNI_CONFIGURE_RPFILTER
                value: "false"
              - name: AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG
                value: "false"
              - name: AWS_VPC_K8S_CNI_EXTERNALSNAT
                value: "false"
              - name: AWS_VPC_K8S_CNI_LOGLEVEL
                value: DEBUG
              - name: AWS_VPC_K8S_CNI_LOG_FILE
                value: /host/var/log/aws-routed-eni/ipamd.log
              - name: AWS_VPC_K8S_CNI_RANDOMIZESNAT
                value: prng
              - name: AWS_VPC_K8S_CNI_VETHPREFIX
                value: eni
              - name: AWS_VPC_K8S_PLUGIN_LOG_FILE
                value: /var/log/aws-routed-eni/plugin.log
              - name: AWS_VPC_K8S_PLUGIN_LOG_LEVEL
                value: DEBUG
              - name: DISABLE_INTROSPECTION
                value: "false"
              - name: DISABLE_METRICS
                value: "false"
              - name: DISABLE_NETWORK_RESOURCE_PROVISIONING
                value: "false"
              - name: ENABLE_IPv4
                value: "true"
              - name: ENABLE_IPv6
                value: "false"
              - name: ENABLE_POD_ENI
                value: "false"
              - name: ENABLE_PREFIX_DELEGATION
                value: "false"
              - name: WARM_ENI_TARGET
                value: "1"
              - name: WARM_PREFIX_TARGET
                value: "1"
              - name: MY_NODE_NAME
                value From:
                  field Ref:
                    field Path: spec.nodeName
              image: 602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni:v1.11.5
              liveness Probe:
                exec:
                  command:
                  - /app/grpc-health-probe
                  - -addr=:50051
                  - -connect-timeout=5s
                  - -rpc-timeout=5s
                initial Delay Seconds: 60
                timeout Seconds: 10
              name: aws-node
              ports:
              - container Port: 61678
                name: metrics
              readiness Probe:
                exec:
                  command:
                  - /app/grpc-health-probe
                  - -addr=:50051
                  - -connect-timeout=5s
                  - -rpc-timeout=5s
                initial Delay Seconds: 1
                timeout Seconds: 10
              resources:
                requests:
                  cpu: 25m
              security Context:
                capabilities:
                  add:
                  - NET_ADMIN
              volume Mounts:
              - mount Path: /host/opt/cni/bin
                name: cni-bin-dir
              - mount Path: /host/etc/cni/net.d
                name: cni-net-dir
              - mount Path: /host/var/log/aws-routed-eni
                name: log-dir
              - mount Path: /var/run/dockershim.sock
                name: dockershim
              - mount Path: /var/run/aws-node
                name: run-dir
              - mount Path: /run/xtables.lock
                name: xtables-lock
            host Network: true
            init Containers:
            - env:
              - name: DISABLE_TCP_EARLY_DEMUX
                value: "false"
              - name: ENABLE_IPv6
                value: "false"
              image: 602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni-init:v1.11.5
              name: aws-vpc-cni-init
              security Context:
                privileged: true
              volume Mounts:
              - mount Path: /host/opt/cni/bin
                name: cni-bin-dir
            priority Class Name: system-node-critical
            security Context: {}
            service Account Name: aws-node
            termination Grace Period Seconds: 10
            tolerations:
            - operator: Exists
            volumes:
            - host Path:
                path: /opt/cni/bin
              name: cni-bin-dir
            - host Path:
                path: /etc/cni/net.d
              name: cni-net-dir
            - host Path:
                path: /var/run/dockershim.sock
              name: dockershim
            - host Path:
                path: /var/log/aws-routed-eni
                type: DirectoryOrCreate
              name: log-dir
            - host Path:
                path: /var/run/aws-node
                type: DirectoryOrCreate
              name: run-dir
            - host Path:
                path: /run/xtables.lock
              name: xtables-lock
        update Strategy:
          rolling Update:
            max Unavailable: 10%
          type: RollingUpdate
    traits:
      meshmap:
        edges: []
        fieldRefData: {}
        id: 2f9e843c-72b7-4b39-9164-8e96e11b7559
        meshmodel-metadata:
          capabilities: |2-
             {
              "designer": {
                "edit": {
                  "shape": {
                    "convert-shape": false
                  }
                }
              }
            }
          defaultData: ""
          genealogy: parent
          isAnnotation: false
          isCustomResource: false
          isModelAnnotation: "FALSE"
          isNamespaced: true
          logoURL: Created by Meshery Authors
          model: kubernetes
          modelDisplayName: Kubernetes
          primaryColor: '#326CE5'
          secondaryColor: '#7aa1f0'
          shape: circle
          shapePolygonPoints: ""
          status: enabled
          styleOverrides:
            background-opacity: 0.5
            border-width: 2
            z-index: 3
          styles: '{"border-width":2,"background-opacity":0.5}'
          subCategory: ""
          svgColor: ui/public/static/img/meshmodels/kubernetes/color/daemonset-color.svg
          svgComplete: ui/public/static/img/meshmodels/kubernetes/complete/daemonset-complete.svg
          svgWhite: ui/public/static/img/meshmodels/kubernetes/white/daemonset-white.svg
        position:
          posX: 38
          posY: -32.5
        whiteboardData:
          style: {}
    type: DaemonSet
    version: ""
  eniconfigs.crd.k8s.amazonaws.com:
    annotations: {}
    apiVersion: apiextensions.k8s.io/v1
    dependsOn: []
    id: null
    isAnnotation: null
    labels:
      app.kubernetes.io/instance: aws-vpc-cni
      app.kubernetes.io/name: aws-node
      app.kubernetes.io/version: v1.11.5
      k8s-app: aws-node
    model: kubernetes
    name: eniconfigs.crd.k8s.amazonaws.com
    namespace: ""
    settings:
      spec:
        group: crd.k8s.amazonaws.com
        names:
          kind: ENIConfig
          plural: eniconfigs
          singular: eniconfig
        preserve Unknown Fields: false
        scope: Cluster
        versions:
        - name: v1alpha1
          schema:
            open APIV3Schema:
              type: object
              x-kubernetes-preserve-unknown-fields: true
          served: true
          storage: true
    traits:
      meshmap:
        edges: []
        fieldRefData: {}
        id: 1ba16c02-3aa1-4e7b-9a1a-94ed6f7f7a0b
        meshmodel-metadata:
          capabilities: ""
          defaultData: ""
          genealogy: ""
          isAnnotation: false
          isCustomResource: false
          isNamespaced: false
          logoURL: https://github.com/cncf/artwork/blob/master/projects/kubernetes/icon/white/kubernetes-icon-white.svg
          model: kubernetes
          modelDisplayName: Kubernetes
          primaryColor: '#326CE5'
          secondaryColor: '#7aa1f0'
          shape: circle
          shapePolygonPoints: ""
          status: enabled
          styleOverrides:
            z-index: 6
          styles: ""
          subCategory: ""
          svgColor: ui/public/static/img/meshmodels/kubernetes/color/customresourcedefinition-color.svg
          svgComplete: ""
          svgWhite: ui/public/static/img/meshmodels/kubernetes/white/customresourcedefinition-white.svg
        position:
          posX: -38
          posY: -33
        whiteboardData:
          style: {}
    type: CustomResourceDefinition
    version: ""
